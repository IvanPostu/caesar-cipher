group = 'com.ivan.app'
version = '1.0'

apply plugin: 'eclipse'
apply plugin: 'java'

sourceCompatibility = 8
targetCompatibility = 8
final String SPRING_VERSION = '5.2.10.RELEASE'

sourceSets {
  main {
    resources { srcDirs = ["src/main/resources"]; exclude "**/*.txt" }
  }
}

task buildCSources(type:Exec) {
  /**
  * Command line argument, example -DfilenameKeywords="example1 example2"
  * can be null
  * */
  String filenameKeywords = System.getProperty('filenameKeywords')
  filenameKeywords = filenameKeywords == null ? "" : filenameKeywords
  
  commandLine(
    './scripts/buildCSources.bash', 
    projectDir, 
    "${projectDir}/src/main/resources/nativeLibs", 
    filenameKeywords
  )
}
buildCSources.dependsOn(processResources, compileJava)

task buildCppSources(type:Exec) {
  /**
  * Command line argument, example -DfilenameKeywords="example1 example2"
  * can be null
  * */
  String filenameKeywords = System.getProperty('filenameKeywords')
  filenameKeywords = filenameKeywords == null ? "" : filenameKeywords
  
  commandLine(
    './scripts/buildCppSources.bash', 
    projectDir, 
    "${projectDir}/src/main/resources/nativeLibs", 
    filenameKeywords
  )
}
buildCppSources.dependsOn(processResources, compileJava)

final String runtimeDependencies = "${buildDir}/libs/runtime_dependencies/"
final String compileDependencies = "${buildDir}/libs/compile_dependencies/"
task copyCompileDeps(type: Copy) {
  from configurations.compile
  into "${compileDependencies}"
  // configurations.each { println it.name }
}

build.dependsOn(buildCSources, buildCppSources, copyCompileDeps)



test {

  useJUnitPlatform {
  }

  afterTest { desc, result -> 
    def fg = 39 //default
    
    if("${result.resultType}"=="SUCCESS" ){
      fg = 32
    }

    if("${result.resultType}"=="FAILURE" ){
      fg = 31
    }

    def style = "${(char)27}[$fg"+"m"
    def end = "${(char)27}[0m"
    logger.quiet "[${style + result.resultType + end}] Executing test ${desc.name} [${desc.className}]"
  }

}

repositories {
  mavenCentral()
}

final JUNIT_VERSION = '5.7.0'

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
  compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'

  compile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
  compile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
  compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'


  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: JUNIT_VERSION
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: JUNIT_VERSION

}

